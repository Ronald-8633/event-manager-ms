server:
  port: 8080

spring:
  application:
    name: event-manager-ms
  data:
    mongodb:
      uri: ${MONGODB_URI:mongodb://localhost:27017/event-manager-ms}
      database: event-manager-ms
      auto-index-creation: true
  profiles:
    active: dev

  rabbitmq:
    addresses: 'localhost:5672'
    username: ${USUARIO_RABBIT:guest}
    password: ${SENHA_RABBIT:guest}
    virtual-host: '/'

  cloud:
    function:
      definition: subscribeEventCancel

    stream:
      bindings:
        subscribeEventCancel-in-0:
          destination: x-event-cancel
          group: q-event-manager-event-cancel
          consumer:
            maxAttempts: 1
            default-requeue-rejected: false

        publishEstablishmentContractPendencyProcessedExchange:
          destination: x-establishment-contract-pendency-processed

      rabbit:
        bindings:

          subscribeEventCancel-in-0:
            consumer:
              republish-to-dlq: true
              auto-bind-dlq: true
              dlq-ttl: 30000
              exchange-type: fanout
              deadLetterExchange: x-event-manager-event-cancel-error


          publishEstablishmentContractPendencyProcessedExchange:
            producer:
              exchangeType: fanout

      binders:
        rabbitMQ:
          type: rabbit

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
    tags-sorter: alpha
    try-it-out-enabled: true
jwt:
  secret: suaChaveSecretaMuitoLongaEAleatoriaAqui123456789
  expiration: 86400000

openai:
  api:
    key: ${OPENAI_API_KEY:""}
    model: gpt-4o-mini
    max-tokens: 800
    temperature: 0.7
microservice:
  chatgpt:
    protocol: https
    hostname: api.openai.com
    port:
    path: v1/chat/completions
logging:
  level:
    root: INFO
    com.eventmanager: DEBUG
    org.springframework.data.mongodb: INFO
    org.springframework.web: INFO
